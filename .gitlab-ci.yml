stages:
  - test
  - deploy

test-short:
  stage: test
  image: continuumio/anaconda:latest
  before_script:
    - conda info -a
    - conda env create ClimateImpactLab/risingverse
    - source activate risingverse
  script:
  - source activate risingverse
  - pytest -v -m "not imperics_shareddir"

test-full:
  stage: test
  image: continuumio/anaconda:latest
  before_script:
    - conda info -a
    - export GCSFUSE_REPO=gcsfuse-`lsb_release -c -s`
    - apt install gnupg2
    - echo "deb http://packages.cloud.google.com/apt $GCSFUSE_REPO main" | tee /etc/apt/sources.list.d/gcsfuse.list
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
    - apt update
    - apt install gcsfuse
    - export GOOGLE_APPLICATION_CREDENTIALS="/ci-key.json"
    - echo "$GCR_KEY" > /ci-key.json
    - gcsfuse impact-calculations-cicd /gcs
    - export IMPERICS_SHAREDDIR="/gcs/impact-calculations-cicd"
    - conda env create ClimateImpactLab/risingverse
    - source activate risingverse
  script:
  - source activate risingverse
  - pip install .
  - pytest -v
  after_script:
  - fusermount -u /gcs
  rules:
  - if: $CI_MERGE_REQUEST_ID          # Execute jobs in merge request context
  - if: $CI_COMMIT_BRANCH == 'master' # Execute jobs when a new commit is pushed to master branch

deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - cat $GCR_KEY | docker login -u _json_key --password-stdin https://$GCR_HOST
    - docker info
    - docker build -t imperics .
    - docker run --rm imperics imperics --help  # "Testing" the image.
    - docker images
    - docker tag imperics $GCR_HOST/$GCS_PROJECTID/imperics:dev
    - docker push $GCR_HOST/$GCS_PROJECTID/imperics:dev
  only:
    - master
