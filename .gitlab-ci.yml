image: docker:latest
services:
- docker:dind

stages:
- build
- test
- release

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE_GITLAB: $CI_REGISTRY_IMAGE:latest
  CONTAINER_RELEASE_IMAGE_GCR: $GCR_HOST/$GCS_PROJECTID/imperics:latest

before_script:
- docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
  - docker pull $CI_REGISTRY_IMAGE:latest || true
  - docker build --tag $CONTAINER_TEST_IMAGE .
  - docker push $CONTAINER_TEST_IMAGE

test-cli:
  stage: test
  script:
  - docker pull $CONTAINER_TEST_IMAGE
  - docker run $CONTAINER_TEST_IMAGE imperics --help

test-pytest:
  stage: test
  script:
  - docker pull $CONTAINER_TEST_IMAGE
  - docker run $CONTAINER_TEST_IMAGE /bin/bash -c 'cd /opt/src/app; pytest -v -m "not imperics_shareddir" /opt/src/app'

release-gitlab:
  stage: release
  script:
  - docker pull $CONTAINER_TEST_IMAGE
  - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE_GITLAB
  - docker push $CONTAINER_RELEASE_IMAGE_GITLAB
  only:
  - master

release-gcr:
  stage: release
  script:
  - docker pull $CONTAINER_TEST_IMAGE
  - cat $GCR_KEY | docker login -u _json_key --password-stdin https://$GCR_HOST
  - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE_GCR
  - docker push $CONTAINER_RELEASE_IMAGE_GCR
  only:
  - master
